/**
 * Eslint@8.24.0 规则集
 */

module.exports = [
  {
    title: 'Possible Problems ',
    id: 'possible-problems',
    desc: 'These rules relate to possible logic errors in code:',
    rules: [
      {
        title: 'array-callback-return',
        desc: 'Enforce return statements in callbacks of array methods',
        recommend: false,
        fixable: false,
      },
      {
        title: 'constructor-super',
        desc: 'Require `super()` calls in constructors',
        recommend: true,
        fixable: false,
      },
      {
        title: 'for-direction',
        desc: 'Enforce "for" loop update clause moving the counter in the right direction.',
        recommend: true,
        fixable: false,
      },
      {
        title: 'getter-return',
        desc: 'Enforce `return` statements in getters',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-async-promise-executor',
        desc: 'Disallow using an async function as a Promise executor',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-await-in-loop',
        desc: 'Disallow `await` inside of loops',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-class-assign',
        desc: 'Disallow reassigning class members',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-compare-neg-zero',
        desc: 'Disallow comparing against -0',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-cond-assign',
        desc: 'Disallow assignment operators in conditional expressions',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-const-assign',
        desc: 'Disallow reassigning `const` variables',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-constant-binary-expression',
        desc: "Disallow expressions where the operation doesn't affect the value",
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-constant-condition',
        desc: 'Disallow constant expressions in conditions',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-constructor-return',
        desc: 'Disallow returning value from constructor',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-control-regex',
        desc: 'Disallow control characters in regular expressions',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-debugger',
        desc: 'Disallow the use of `debugger`',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-dupe-args',
        desc: 'Disallow duplicate arguments in `function` definitions',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-dupe-class-members',
        desc: 'Disallow duplicate class members',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-dupe-else-if',
        desc: 'Disallow duplicate conditions in if-else-if chains',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-dupe-keys',
        desc: 'Disallow duplicate keys in object literals',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-duplicate-case',
        desc: 'Disallow duplicate case labels',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-duplicate-imports',
        desc: 'Disallow duplicate module imports',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-empty-character-class',
        desc: 'Disallow empty character classes in regular expressions',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-empty-pattern',
        desc: 'Disallow empty destructuring patterns',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-ex-assign',
        desc: 'Disallow reassigning exceptions in `catch` clauses',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-fallthrough',
        desc: 'Disallow fallthrough of `case` statements',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-func-assign',
        desc: 'Disallow reassigning `function` declarations',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-import-assign',
        desc: 'Disallow assigning to imported bindings',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-inner-declarations',
        desc: 'Disallow variable or `function` declarations in nested blocks',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-invalid-regexp',
        desc: 'Disallow invalid regular expression strings in `RegExp` constructors',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-irregular-whitespace',
        desc: 'Disallow irregular whitespace',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-loss-of-precision',
        desc: 'Disallow literal numbers that lose precision',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-misleading-character-class',
        desc: 'Disallow characters which are made with multiple code points in character class syntax',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-new-symbol',
        desc: 'Disallow `new` operators with the `Symbol` object',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-obj-calls',
        desc: 'Disallow calling global object properties as functions',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-promise-executor-return',
        desc: 'Disallow returning values from Promise executor functions',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-prototype-builtins',
        desc: 'Disallow calling some `Object.prototype` methods directly on objects',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-self-assign',
        desc: 'Disallow assignments where both sides are exactly the same',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-self-compare',
        desc: 'Disallow comparisons where both sides are exactly the same',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-setter-return',
        desc: 'Disallow returning values from setters',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-sparse-arrays',
        desc: 'Disallow sparse arrays',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-template-curly-in-string',
        desc: 'Disallow template literal placeholder syntax in regular strings',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-this-before-super',
        desc: 'Disallow `this`/`super` before calling `super()` in constructors',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-undef',
        desc: 'Disallow the use of undeclared variables unless mentioned in `/*global */` comments',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-unexpected-multiline',
        desc: 'Disallow confusing multiline expressions',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-unmodified-loop-condition',
        desc: 'Disallow unmodified loop conditions',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-unreachable',
        desc: 'Disallow unreachable code after `return`, `throw`, `continue`, and `break` statements',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-unreachable-loop',
        desc: 'Disallow loops with a body that allows only one iteration',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-unsafe-finally',
        desc: 'Disallow control flow statements in `finally` blocks',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-unsafe-negation',
        desc: 'Disallow negating the left operand of relational operators',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-unsafe-optional-chaining',
        desc: 'Disallow use of optional chaining in contexts where the `undefined` value is not allowed',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-unused-private-class-members',
        desc: 'Disallow unused private class members',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-unused-vars',
        desc: 'Disallow unused variables',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-use-before-define',
        desc: 'Disallow the use of variables before they are defined',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-useless-backreference',
        desc: 'Disallow useless backreferences in regular expressions',
        recommend: true,
        fixable: false,
      },
      {
        title: 'require-atomic-updates',
        desc: 'Disallow assignments that can lead to race conditions due to usage of `await` or `yield`',
        recommend: false,
        fixable: false,
      },
      {
        title: 'use-isnan',
        desc: 'Require calls to `isNaN()` when checking for `NaN`',
        recommend: true,
        fixable: false,
      },
      {
        title: 'valid-typeof',
        desc: 'Enforce comparing `typeof` expressions against valid strings',
        recommend: true,
        fixable: false,
      },
    ],
  },
  {
    title: 'Suggestions ',
    id: 'suggestions',
    desc: 'These rules suggest alternate ways of doing things:',
    rules: [
      {
        title: 'accessor-pairs',
        desc: 'Enforce getter and setter pairs in objects and classes',
        recommend: false,
        fixable: false,
      },
      {
        title: 'arrow-body-style',
        desc: 'Require braces around arrow function bodies',
        recommend: false,
        fixable: true,
      },
      {
        title: 'block-scoped-var',
        desc: 'Enforce the use of variables within the scope they are defined',
        recommend: false,
        fixable: false,
      },
      {
        title: 'camelcase',
        desc: 'Enforce camelcase naming convention',
        recommend: false,
        fixable: false,
      },
      {
        title: 'capitalized-comments',
        desc: 'Enforce or disallow capitalization of the first letter of a comment',
        recommend: false,
        fixable: true,
      },
      {
        title: 'class-methods-use-this',
        desc: 'Enforce that class methods utilize `this`',
        recommend: false,
        fixable: false,
      },
      {
        title: 'complexity',
        desc: 'Enforce a maximum cyclomatic complexity allowed in a program',
        recommend: false,
        fixable: false,
      },
      {
        title: 'consistent-return',
        desc: 'Require `return` statements to either always or never specify values',
        recommend: false,
        fixable: false,
      },
      {
        title: 'consistent-this',
        desc: 'Enforce consistent naming when capturing the current execution context',
        recommend: false,
        fixable: false,
      },
      {
        title: 'curly',
        desc: 'Enforce consistent brace style for all control statements',
        recommend: false,
        fixable: true,
      },
      {
        title: 'default-case',
        desc: 'Require `default` cases in `switch` statements',
        recommend: false,
        fixable: false,
      },
      {
        title: 'default-case-last',
        desc: 'Enforce default clauses in switch statements to be last',
        recommend: false,
        fixable: false,
      },
      {
        title: 'default-param-last',
        desc: 'Enforce default parameters to be last',
        recommend: false,
        fixable: false,
      },
      {
        title: 'dot-notation',
        desc: 'Enforce dot notation whenever possible',
        recommend: false,
        fixable: true,
      },
      {
        title: 'eqeqeq',
        desc: 'Require the use of `===` and `!==`',
        recommend: false,
        fixable: true,
      },
      {
        title: 'func-name-matching',
        desc: 'Require function names to match the name of the variable or property to which they are assigned',
        recommend: false,
        fixable: false,
      },
      {
        title: 'func-names',
        desc: 'Require or disallow named `function` expressions',
        recommend: false,
        fixable: false,
      },
      {
        title: 'func-style',
        desc: 'Enforce the consistent use of either `function` declarations or expressions',
        recommend: false,
        fixable: false,
      },
      {
        title: 'grouped-accessor-pairs',
        desc: 'Require grouped accessor pairs in object literals and classes',
        recommend: false,
        fixable: false,
      },
      {
        title: 'guard-for-in',
        desc: 'Require `for-in` loops to include an `if` statement',
        recommend: false,
        fixable: false,
      },
      {
        title: 'id-denylist',
        desc: 'Disallow specified identifiers',
        recommend: false,
        fixable: false,
      },
      {
        title: 'id-length',
        desc: 'Enforce minimum and maximum identifier lengths',
        recommend: false,
        fixable: false,
      },
      {
        title: 'id-match',
        desc: 'Require identifiers to match a specified regular expression',
        recommend: false,
        fixable: false,
      },
      {
        title: 'init-declarations',
        desc: 'Require or disallow initialization in variable declarations',
        recommend: false,
        fixable: false,
      },
      {
        title: 'logical-assignment-operators',
        desc: 'Require or disallow logical assignment logical operator shorthand',
        recommend: false,
        fixable: true,
      },
      {
        title: 'max-classes-per-file',
        desc: 'Enforce a maximum number of classes per file',
        recommend: false,
        fixable: false,
      },
      {
        title: 'max-depth',
        desc: 'Enforce a maximum depth that blocks can be nested',
        recommend: false,
        fixable: false,
      },
      {
        title: 'max-lines',
        desc: 'Enforce a maximum number of lines per file',
        recommend: false,
        fixable: false,
      },
      {
        title: 'max-lines-per-function',
        desc: 'Enforce a maximum number of lines of code in a function',
        recommend: false,
        fixable: false,
      },
      {
        title: 'max-nested-callbacks',
        desc: 'Enforce a maximum depth that callbacks can be nested',
        recommend: false,
        fixable: false,
      },
      {
        title: 'max-params',
        desc: 'Enforce a maximum number of parameters in function definitions',
        recommend: false,
        fixable: false,
      },
      {
        title: 'max-statements',
        desc: 'Enforce a maximum number of statements allowed in function blocks',
        recommend: false,
        fixable: false,
      },
      {
        title: 'multiline-comment-style',
        desc: 'Enforce a particular style for multiline comments',
        recommend: false,
        fixable: true,
      },
      {
        title: 'new-cap',
        desc: 'Require constructor names to begin with a capital letter',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-alert',
        desc: 'Disallow the use of `alert`, `confirm`, and `prompt`',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-array-constructor',
        desc: 'Disallow `Array` constructors',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-bitwise',
        desc: 'Disallow bitwise operators',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-caller',
        desc: 'Disallow the use of `arguments.caller` or `arguments.callee`',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-case-declarations',
        desc: 'Disallow lexical declarations in case clauses',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-confusing-arrow',
        desc: 'Disallow arrow functions where they could be confused with comparisons',
        recommend: false,
        fixable: true,
      },
      {
        title: 'no-console',
        desc: 'Disallow the use of `console`',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-continue',
        desc: 'Disallow `continue` statements',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-delete-var',
        desc: 'Disallow deleting variables',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-div-regex',
        desc: 'Disallow division operators explicitly at the beginning of regular expressions',
        recommend: false,
        fixable: true,
      },
      {
        title: 'no-else-return',
        desc: 'Disallow `else` blocks after `return` statements in `if` statements',
        recommend: false,
        fixable: true,
      },
      {
        title: 'no-empty',
        desc: 'Disallow empty block statements',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-empty-function',
        desc: 'Disallow empty functions',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-eq-null',
        desc: 'Disallow `null` comparisons without type-checking operators',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-eval',
        desc: 'Disallow the use of `eval()`',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-extend-native',
        desc: 'Disallow extending native types',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-extra-bind',
        desc: 'Disallow unnecessary calls to `.bind()`',
        recommend: false,
        fixable: true,
      },
      {
        title: 'no-extra-boolean-cast',
        desc: 'Disallow unnecessary boolean casts',
        recommend: true,
        fixable: true,
      },
      {
        title: 'no-extra-label',
        desc: 'Disallow unnecessary labels',
        recommend: false,
        fixable: true,
      },
      {
        title: 'no-extra-semi',
        desc: 'Disallow unnecessary semicolons',
        recommend: true,
        fixable: true,
      },
      {
        title: 'no-floating-decimal',
        desc: 'Disallow leading or trailing decimal points in numeric literals',
        recommend: false,
        fixable: true,
      },
      {
        title: 'no-global-assign',
        desc: 'Disallow assignments to native objects or read-only global variables',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-implicit-coercion',
        desc: 'Disallow shorthand type conversions',
        recommend: false,
        fixable: true,
      },
      {
        title: 'no-implicit-globals',
        desc: 'Disallow declarations in the global scope',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-implied-eval',
        desc: 'Disallow the use of `eval()`-like methods',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-inline-comments',
        desc: 'Disallow inline comments after code',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-invalid-this',
        desc: 'Disallow use of `this` in contexts where the value of `this` is `undefined`',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-iterator',
        desc: 'Disallow the use of the `__iterator__` property',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-label-var',
        desc: 'Disallow labels that share a name with a variable',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-labels',
        desc: 'Disallow labeled statements',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-lone-blocks',
        desc: 'Disallow unnecessary nested blocks',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-lonely-if',
        desc: 'Disallow `if` statements as the only statement in `else` blocks',
        recommend: false,
        fixable: true,
      },
      {
        title: 'no-loop-func',
        desc: 'Disallow function declarations that contain unsafe references inside loop statements',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-magic-numbers',
        desc: 'Disallow magic numbers',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-mixed-operators',
        desc: 'Disallow mixed binary operators',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-multi-assign',
        desc: 'Disallow use of chained assignment expressions',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-multi-str',
        desc: 'Disallow multiline strings',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-negated-condition',
        desc: 'Disallow negated conditions',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-nested-ternary',
        desc: 'Disallow nested ternary expressions',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-new',
        desc: 'Disallow `new` operators outside of assignments or comparisons',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-new-func',
        desc: 'Disallow `new` operators with the `Function` object',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-new-object',
        desc: 'Disallow `Object` constructors',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-new-wrappers',
        desc: 'Disallow `new` operators with the `String`, `Number`, and `Boolean` objects',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-nonoctal-decimal-escape',
        desc: 'Disallow `\\8` and `\\9` escape sequences in string literals',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-octal',
        desc: 'Disallow octal literals',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-octal-escape',
        desc: 'Disallow octal escape sequences in string literals',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-param-reassign',
        desc: 'Disallow reassigning `function` parameters',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-plusplus',
        desc: 'Disallow the unary operators `++` and `--`',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-proto',
        desc: 'Disallow the use of the `__proto__` property',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-redeclare',
        desc: 'Disallow variable redeclaration',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-regex-spaces',
        desc: 'Disallow multiple spaces in regular expressions',
        recommend: true,
        fixable: true,
      },
      {
        title: 'no-restricted-exports',
        desc: 'Disallow specified names in exports',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-restricted-globals',
        desc: 'Disallow specified global variables',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-restricted-imports',
        desc: 'Disallow specified modules when loaded by `import`',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-restricted-properties',
        desc: 'Disallow certain properties on certain objects',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-restricted-syntax',
        desc: 'Disallow specified syntax',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-return-assign',
        desc: 'Disallow assignment operators in `return` statements',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-return-await',
        desc: 'Disallow unnecessary `return await`',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-script-url',
        desc: 'Disallow `javascript:` urls',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-sequences',
        desc: 'Disallow comma operators',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-shadow',
        desc: 'Disallow variable declarations from shadowing variables declared in the outer scope',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-shadow-restricted-names',
        desc: 'Disallow identifiers from shadowing restricted names',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-ternary',
        desc: 'Disallow ternary operators',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-throw-literal',
        desc: 'Disallow throwing literals as exceptions',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-undef-init',
        desc: 'Disallow initializing variables to `undefined`',
        recommend: false,
        fixable: true,
      },
      {
        title: 'no-undefined',
        desc: 'Disallow the use of `undefined` as an identifier',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-underscore-dangle',
        desc: 'Disallow dangling underscores in identifiers',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-unneeded-ternary',
        desc: 'Disallow ternary operators when simpler alternatives exist',
        recommend: false,
        fixable: true,
      },
      {
        title: 'no-unused-expressions',
        desc: 'Disallow unused expressions',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-unused-labels',
        desc: 'Disallow unused labels',
        recommend: true,
        fixable: true,
      },
      {
        title: 'no-useless-call',
        desc: 'Disallow unnecessary calls to `.call()` and `.apply()`',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-useless-catch',
        desc: 'Disallow unnecessary `catch` clauses',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-useless-computed-key',
        desc: 'Disallow unnecessary computed property keys in objects and classes',
        recommend: false,
        fixable: true,
      },
      {
        title: 'no-useless-concat',
        desc: 'Disallow unnecessary concatenation of literals or template literals',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-useless-constructor',
        desc: 'Disallow unnecessary constructors',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-useless-escape',
        desc: 'Disallow unnecessary escape characters',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-useless-rename',
        desc: 'Disallow renaming import, export, and destructured assignments to the same name',
        recommend: false,
        fixable: true,
      },
      {
        title: 'no-useless-return',
        desc: 'Disallow redundant return statements',
        recommend: false,
        fixable: true,
      },
      {
        title: 'no-var',
        desc: 'Require `let` or `const` instead of `var`',
        recommend: false,
        fixable: true,
      },
      {
        title: 'no-void',
        desc: 'Disallow `void` operators',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-warning-comments',
        desc: 'Disallow specified warning terms in comments',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-with',
        desc: 'Disallow `with` statements',
        recommend: true,
        fixable: false,
      },
      {
        title: 'object-shorthand',
        desc: 'Require or disallow method and property shorthand syntax for object literals',
        recommend: false,
        fixable: true,
      },
      {
        title: 'one-var',
        desc: 'Enforce variables to be declared either together or separately in functions',
        recommend: false,
        fixable: true,
      },
      {
        title: 'one-var-declaration-per-line',
        desc: 'Require or disallow newlines around variable declarations',
        recommend: false,
        fixable: true,
      },
      {
        title: 'operator-assignment',
        desc: 'Require or disallow assignment operator shorthand where possible',
        recommend: false,
        fixable: true,
      },
      {
        title: 'prefer-arrow-callback',
        desc: 'Require using arrow functions for callbacks',
        recommend: false,
        fixable: true,
      },
      {
        title: 'prefer-const',
        desc: 'Require `const` declarations for variables that are never reassigned after declared',
        recommend: false,
        fixable: true,
      },
      {
        title: 'prefer-destructuring',
        desc: 'Require destructuring from arrays and/or objects',
        recommend: false,
        fixable: true,
      },
      {
        title: 'prefer-exponentiation-operator',
        desc: 'Disallow the use of `Math.pow` in favor of the `**` operator',
        recommend: false,
        fixable: true,
      },
      {
        title: 'prefer-named-capture-group',
        desc: 'Enforce using named capture group in regular expression',
        recommend: false,
        fixable: false,
      },
      {
        title: 'prefer-numeric-literals',
        desc: 'Disallow `parseInt()` and `Number.parseInt()` in favor of binary, octal, and hexadecimal literals',
        recommend: false,
        fixable: true,
      },
      {
        title: 'prefer-object-has-own',
        desc: 'Disallow use of `Object.prototype.hasOwnProperty.call()` and prefer use of `Object.hasOwn()`',
        recommend: false,
        fixable: true,
      },
      {
        title: 'prefer-object-spread',
        desc: 'Disallow using Object.assign with an object literal as the first argument and prefer the use of object spread instead.',
        recommend: false,
        fixable: true,
      },
      {
        title: 'prefer-promise-reject-errors',
        desc: 'Require using Error objects as Promise rejection reasons',
        recommend: false,
        fixable: false,
      },
      {
        title: 'prefer-regex-literals',
        desc: 'Disallow use of the `RegExp` constructor in favor of regular expression literals',
        recommend: false,
        fixable: false,
      },
      {
        title: 'prefer-rest-params',
        desc: 'Require rest parameters instead of `arguments`',
        recommend: false,
        fixable: false,
      },
      {
        title: 'prefer-spread',
        desc: 'Require spread operators instead of `.apply()`',
        recommend: false,
        fixable: false,
      },
      {
        title: 'prefer-template',
        desc: 'Require template literals instead of string concatenation',
        recommend: false,
        fixable: true,
      },
      {
        title: 'quote-props',
        desc: 'Require quotes around object literal property names',
        recommend: false,
        fixable: true,
      },
      {
        title: 'radix',
        desc: 'Enforce the consistent use of the radix argument when using `parseInt()`',
        recommend: false,
        fixable: false,
      },
      {
        title: 'require-await',
        desc: 'Disallow async functions which have no `await` expression',
        recommend: false,
        fixable: false,
      },
      {
        title: 'require-unicode-regexp',
        desc: 'Enforce the use of `u` flag on RegExp',
        recommend: false,
        fixable: false,
      },
      {
        title: 'require-yield',
        desc: 'Require generator functions to contain `yield`',
        recommend: true,
        fixable: false,
      },
      {
        title: 'sort-imports',
        desc: 'Enforce sorted import declarations within modules',
        recommend: false,
        fixable: true,
      },
      {
        title: 'sort-keys',
        desc: 'Require object keys to be sorted',
        recommend: false,
        fixable: false,
      },
      {
        title: 'sort-vars',
        desc: 'Require variables within the same declaration block to be sorted',
        recommend: false,
        fixable: true,
      },
      {
        title: 'spaced-comment',
        desc: 'Enforce consistent spacing after the `//` or `/*` in a comment',
        recommend: false,
        fixable: true,
      },
      {
        title: 'strict',
        desc: 'Require or disallow strict mode directives',
        recommend: false,
        fixable: true,
      },
      {
        title: 'symbol-description',
        desc: 'Require symbol descriptions',
        recommend: false,
        fixable: false,
      },
      {
        title: 'vars-on-top',
        desc: 'Require `var` declarations be placed at the top of their containing scope',
        recommend: false,
        fixable: false,
      },
      {
        title: 'yoda',
        desc: 'Require or disallow "Yoda" conditions',
        recommend: false,
        fixable: true,
      },
    ],
  },
  {
    title: 'Layout & Formatting ',
    id: 'layout--formatting',
    desc: 'These rules care about how the code looks rather than how it executes:',
    rules: [
      {
        title: 'array-bracket-newline',
        desc: 'Enforce linebreaks after opening and before closing array brackets',
        recommend: false,
        fixable: true,
      },
      {
        title: 'array-bracket-spacing',
        desc: 'Enforce consistent spacing inside array brackets',
        recommend: false,
        fixable: true,
      },
      {
        title: 'array-element-newline',
        desc: 'Enforce line breaks after each array element',
        recommend: false,
        fixable: true,
      },
      {
        title: 'arrow-parens',
        desc: 'Require parentheses around arrow function arguments',
        recommend: false,
        fixable: true,
      },
      {
        title: 'arrow-spacing',
        desc: 'Enforce consistent spacing before and after the arrow in arrow functions',
        recommend: false,
        fixable: true,
      },
      {
        title: 'block-spacing',
        desc: 'Disallow or enforce spaces inside of blocks after opening block and before closing block',
        recommend: false,
        fixable: true,
      },
      {
        title: 'brace-style',
        desc: 'Enforce consistent brace style for blocks',
        recommend: false,
        fixable: true,
      },
      {
        title: 'comma-dangle',
        desc: 'Require or disallow trailing commas',
        recommend: false,
        fixable: true,
      },
      {
        title: 'comma-spacing',
        desc: 'Enforce consistent spacing before and after commas',
        recommend: false,
        fixable: true,
      },
      {
        title: 'comma-style',
        desc: 'Enforce consistent comma style',
        recommend: false,
        fixable: true,
      },
      {
        title: 'computed-property-spacing',
        desc: 'Enforce consistent spacing inside computed property brackets',
        recommend: false,
        fixable: true,
      },
      {
        title: 'dot-location',
        desc: 'Enforce consistent newlines before and after dots',
        recommend: false,
        fixable: true,
      },
      {
        title: 'eol-last',
        desc: 'Require or disallow newline at the end of files',
        recommend: false,
        fixable: true,
      },
      {
        title: 'func-call-spacing',
        desc: 'Require or disallow spacing between function identifiers and their invocations',
        recommend: false,
        fixable: true,
      },
      {
        title: 'function-call-argument-newline',
        desc: 'Enforce line breaks between arguments of a function call',
        recommend: false,
        fixable: true,
      },
      {
        title: 'function-paren-newline',
        desc: 'Enforce consistent line breaks inside function parentheses',
        recommend: false,
        fixable: true,
      },
      {
        title: 'generator-star-spacing',
        desc: 'Enforce consistent spacing around `*` operators in generator functions',
        recommend: false,
        fixable: true,
      },
      {
        title: 'implicit-arrow-linebreak',
        desc: 'Enforce the location of arrow function bodies',
        recommend: false,
        fixable: true,
      },
      {
        title: 'indent',
        desc: 'Enforce consistent indentation',
        recommend: false,
        fixable: true,
      },
      {
        title: 'jsx-quotes',
        desc: 'Enforce the consistent use of either double or single quotes in JSX attributes',
        recommend: false,
        fixable: true,
      },
      {
        title: 'key-spacing',
        desc: 'Enforce consistent spacing between keys and values in object literal properties',
        recommend: false,
        fixable: true,
      },
      {
        title: 'keyword-spacing',
        desc: 'Enforce consistent spacing before and after keywords',
        recommend: false,
        fixable: true,
      },
      {
        title: 'line-comment-position',
        desc: 'Enforce position of line comments',
        recommend: false,
        fixable: false,
      },
      {
        title: 'linebreak-style',
        desc: 'Enforce consistent linebreak style',
        recommend: false,
        fixable: true,
      },
      {
        title: 'lines-around-comment',
        desc: 'Require empty lines around comments',
        recommend: false,
        fixable: true,
      },
      {
        title: 'lines-between-class-members',
        desc: 'Require or disallow an empty line between class members',
        recommend: false,
        fixable: true,
      },
      {
        title: 'max-len',
        desc: 'Enforce a maximum line length',
        recommend: false,
        fixable: false,
      },
      {
        title: 'max-statements-per-line',
        desc: 'Enforce a maximum number of statements allowed per line',
        recommend: false,
        fixable: false,
      },
      {
        title: 'multiline-ternary',
        desc: 'Enforce newlines between operands of ternary expressions',
        recommend: false,
        fixable: true,
      },
      {
        title: 'new-parens',
        desc: 'Enforce or disallow parentheses when invoking a constructor with no arguments',
        recommend: false,
        fixable: true,
      },
      {
        title: 'newline-per-chained-call',
        desc: 'Require a newline after each call in a method chain',
        recommend: false,
        fixable: true,
      },
      {
        title: 'no-extra-parens',
        desc: 'Disallow unnecessary parentheses',
        recommend: false,
        fixable: true,
      },
      {
        title: 'no-mixed-spaces-and-tabs',
        desc: 'Disallow mixed spaces and tabs for indentation',
        recommend: true,
        fixable: false,
      },
      {
        title: 'no-multi-spaces',
        desc: 'Disallow multiple spaces',
        recommend: false,
        fixable: true,
      },
      {
        title: 'no-multiple-empty-lines',
        desc: 'Disallow multiple empty lines',
        recommend: false,
        fixable: true,
      },
      {
        title: 'no-tabs',
        desc: 'Disallow all tabs',
        recommend: false,
        fixable: false,
      },
      {
        title: 'no-trailing-spaces',
        desc: 'Disallow trailing whitespace at the end of lines',
        recommend: false,
        fixable: true,
      },
      {
        title: 'no-whitespace-before-property',
        desc: 'Disallow whitespace before properties',
        recommend: false,
        fixable: true,
      },
      {
        title: 'nonblock-statement-body-position',
        desc: 'Enforce the location of single-line statements',
        recommend: false,
        fixable: true,
      },
      {
        title: 'object-curly-newline',
        desc: 'Enforce consistent line breaks after opening and before closing braces',
        recommend: false,
        fixable: true,
      },
      {
        title: 'object-curly-spacing',
        desc: 'Enforce consistent spacing inside braces',
        recommend: false,
        fixable: true,
      },
      {
        title: 'object-property-newline',
        desc: 'Enforce placing object properties on separate lines',
        recommend: false,
        fixable: true,
      },
      {
        title: 'operator-linebreak',
        desc: 'Enforce consistent linebreak style for operators',
        recommend: false,
        fixable: true,
      },
      {
        title: 'padded-blocks',
        desc: 'Require or disallow padding within blocks',
        recommend: false,
        fixable: true,
      },
      {
        title: 'padding-line-between-statements',
        desc: 'Require or disallow padding lines between statements',
        recommend: false,
        fixable: true,
      },
      {
        title: 'quotes',
        desc: 'Enforce the consistent use of either backticks, double, or single quotes',
        recommend: false,
        fixable: true,
      },
      {
        title: 'rest-spread-spacing',
        desc: 'Enforce spacing between rest and spread operators and their expressions',
        recommend: false,
        fixable: true,
      },
      {
        title: 'semi',
        desc: 'Require or disallow semicolons instead of ASI',
        recommend: false,
        fixable: true,
      },
      {
        title: 'semi-spacing',
        desc: 'Enforce consistent spacing before and after semicolons',
        recommend: false,
        fixable: true,
      },
      {
        title: 'semi-style',
        desc: 'Enforce location of semicolons',
        recommend: false,
        fixable: true,
      },
      {
        title: 'space-before-blocks',
        desc: 'Enforce consistent spacing before blocks',
        recommend: false,
        fixable: true,
      },
      {
        title: 'space-before-function-paren',
        desc: 'Enforce consistent spacing before `function` definition opening parenthesis',
        recommend: false,
        fixable: true,
      },
      {
        title: 'space-in-parens',
        desc: 'Enforce consistent spacing inside parentheses',
        recommend: false,
        fixable: true,
      },
      {
        title: 'space-infix-ops',
        desc: 'Require spacing around infix operators',
        recommend: false,
        fixable: true,
      },
      {
        title: 'space-unary-ops',
        desc: 'Enforce consistent spacing before or after unary operators',
        recommend: false,
        fixable: true,
      },
      {
        title: 'switch-colon-spacing',
        desc: 'Enforce spacing around colons of switch statements',
        recommend: false,
        fixable: true,
      },
      {
        title: 'template-curly-spacing',
        desc: 'Require or disallow spacing around embedded expressions of template strings',
        recommend: false,
        fixable: true,
      },
      {
        title: 'template-tag-spacing',
        desc: 'Require or disallow spacing between template tags and their literals',
        recommend: false,
        fixable: true,
      },
      {
        title: 'unicode-bom',
        desc: 'Require or disallow Unicode byte order mark (BOM)',
        recommend: false,
        fixable: true,
      },
      {
        title: 'wrap-iife',
        desc: 'Require parentheses around immediate `function` invocations',
        recommend: false,
        fixable: true,
      },
      {
        title: 'wrap-regex',
        desc: 'Require parenthesis around regex literals',
        recommend: false,
        fixable: true,
      },
      {
        title: 'yield-star-spacing',
        desc: 'Require or disallow spacing around the `*` in `yield*` expressions',
        recommend: false,
        fixable: true,
      },
    ],
  },
];
